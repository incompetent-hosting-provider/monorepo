name: cli

on:
  push:
    branches:
      - main
    paths:
      - cli/**/*.go
      - cli/go.mod
      - .github/workflows/**

  pull_request:
    branches: 
      - main
    paths:
      - cli/**/*.go
      - cli/go.mod
      - .github/workflows/**

permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: cli 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21.4' 

      - name: run tests
        run: go test ./...

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v1.54

          # Optional: working directory, useful for monorepos
          working-directory: cli/

          # Optional: golangci-lint command line arguments.
          #
          # Note: By default, the `.golangci.yml` file should be at the root of the repository.
          # The location of the configuration file can be changed by using `--config=`
          # args: --timeout=30m --config=/my/path/.golangci.yml --issues-exit-code=0
          args: --timeout=5m --new-from-rev=HEAD~2

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true, then all caching functionality will be completely disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          # install-mode: "goinstall"

  build:
    needs:
      - test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: cli 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: '1.21.4' 
      
      - name: build
        # verbose build
        run: go build -x -v 

      - uses: actions/upload-artifact@v4
        with:
          name: cli-build-${{ matrix.os }}
          path: cli/cli
