version: '3'

volumes:
  prometheus_data: {}
  grafana-storage: {}

networks:
  loki-net:
    external: true

services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ./docker/rabbitmq/data/:/var/lib/rabbitmq/
        - ./docker/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
        test: ["CMD", "wget", "-O", "-", " http://localhost:15672/"]
        interval: 1m30s
        timeout: 10s
        retries: 3
        start_period: 2m

  keycloak:
    #image: quay.io/keycloak/keycloak:22.0.5
    build: ./keycloak
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - ICHP_BACKEND_HOST=http://backend:8081
    command: start-dev --import-realm
    volumes:
      - ./keycloak/volume/keycloak.json:/opt/keycloak/data/import/keycloak.json


  # Local DynamDb container (see https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html)
  dynamodb:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal

  backend:
    build: ./backend
    restart: always
    links:
      - "dynamodb:dynamodb"
      - "keycloak:keycloak"
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - GIN_MODE=debug
      - AWS_ENDPOINT=http://dynamodb:8000
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - AWS_SESSION_TOKEN=dummy
      - KEYCLOAK_CERT_ENDPOINT_URL=http://keycloak:8080/realms/ihp-realm/protocol/openid-connect/certs
      - MQ_CONN_STRING=amqp://guest:guest@rabbitmq:5672/
    healthcheck:
      test: curl --fail http://localhost:8081/health || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  #prometheus
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  #loki
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    networks:
      - loki-net

  #grafana
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning/dashboard:/etc/grafana/provisioning/dashboard
      - ./grafana/provisioning/datasource:/etc/grafana/provisioning/datasource
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "./grafana/provisioning/dashboard/backend_dashboard.json"

      #credentials: admin, pw: ihp_admin