definitions:
  instances.ContainerImageDescription:
    properties:
      name:
        type: string
      version:
        type: string
    type: object
  instances.CreateContainerResponse:
    properties:
      id:
        type: string
    type: object
  instances.CreateCustomContainerBody:
    properties:
      description:
        type: string
      env_vars:
        additionalProperties:
          type: string
        type: object
      image:
        $ref: '#/definitions/instances.ContainerImageDescription'
      name:
        type: string
      ports:
        items:
          type: integer
        type: array
    type: object
  instances.CreatePresetContainerBody:
    properties:
      description:
        type: string
      name:
        type: string
      preset:
        type: integer
    type: object
  instances.InstanceInfo:
    properties:
      container image:
        $ref: '#/definitions/instances.ContainerImageDescription'
      id:
        type: string
      name:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  instances.InstanceInfoDetailedResponse:
    properties:
      container image:
        $ref: '#/definitions/instances.ContainerImageDescription'
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      open_ports:
        items:
          type: integer
        type: array
      started_at:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  instances.InstancesInfoReponse:
    properties:
      instances:
        items:
          $ref: '#/definitions/instances.InstanceInfo'
        type: array
    type: object
  payment.BalanceIncreaseBody:
    properties:
      amount:
        type: integer
    type: object
  payment.BalanceResponse:
    properties:
      balance:
        type: integer
    type: object
  user.UserResponse:
    properties:
      balance:
        type: integer
      email:
        type: string
    type: object
  util.ErrorResponse:
    properties:
      error:
        type: string
    type: object
info:
  contact: {}
paths:
  /instances:
    get:
      description: Get all instances for current user ignoring the status
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/instances.InstancesInfoReponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all user instances
      tags:
      - instances
  /instances/{containerId}:
    delete:
      description: Delete container by ID
      parameters:
      - description: Container Id
        in: path
        name: containerId
        required: true
        type: string
      responses:
        "202":
          description: accepted
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete container
      tags:
      - instances
    get:
      description: Get details of a single instance by id
      parameters:
      - description: Container Id
        in: path
        name: containerId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/instances.InstanceInfoDetailedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get instance details
      tags:
      - instances
  /instances/custom:
    post:
      description: Start the container creation flow. This will schedule the creation
        of said container
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/instances.CreateCustomContainerBody'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/instances.CreateContainerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create container based on custom definition
      tags:
      - instances
  /instances/preset:
    post:
      description: Start the container creation flow. This will schedule the creation
        of said container
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/instances.CreatePresetContainerBody'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/instances.CreateContainerResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create container based on preset
      tags:
      - instances
  /payment:
    get:
      description: Get current user balance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payment.BalanceResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user balance
      tags:
      - payment
    post:
      description: Increase user balance
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/payment.BalanceIncreaseBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payment.BalanceResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Increase user balance
      tags:
      - payment
  /spi-webhook:
    get:
      description: Handle keycloak SPI webhook events
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payment.BalanceResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: SPI webhook handler
      tags:
      - webhook
  /user:
    get:
      description: Get user info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user info
      tags:
      - user
securityDefinitions:
  BearerAuth:
    description: Auth token security
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
